import 'package:calculadora_de_imc/widgets/custom_alert_dialog.dart';
import 'package:calculadora_de_imc/widgets/custom_elevated_buttom.dart';
import 'package:calculadora_de_imc/widgets/custom_text_fields.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';

class ImcCalculator extends StatefulWidget {
  const ImcCalculator({Key? key}) : super(key: key);

  @override
  State<ImcCalculator> createState() => ImcCalculatorState();
}

class ImcCalculatorState extends State<ImcCalculator> {
  //Definindo abaixo os controladores para os inputs
  final TextEditingController _weightController = TextEditingController();
  final TextEditingController _heightController = TextEditingController();

  String? _infoTextImc;
  double? _imc;

  String svg = '''
      5.69k → 4.36k 76.57%
      <svg width="894" height="894" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="m300.023 437 6.801 1.656.014-.059.014-.059-6.829-1.538Zm49.477-30.5h7v-.34l-.033-.339-6.967.679Zm0 181.5 6.992.326.008-.163V588h-7ZM342 761.5l-5.967 3.659.227.371.271.339L342 761.5Zm12.664 14.5-5.005 4.894 1.08 1.104 1.444.548 2.481-6.546Zm47.739-23.33 5.619 4.175.843-1.136.337-1.374-6.799-1.665Zm12.079-49.312-6.796-1.679-.002.007-.001.007 6.799 1.665ZM431.5 634.5l6.796 1.68.008-.033.007-.032-6.811-1.615Zm16-67.5 6.811 1.615.189-.797V567h-7Zm-70.404 209 1.703 6.79.911-.229.82-.461-3.434-6.1ZM329.5 284.5l-2.164-6.657 2.164 6.657Zm30-10-1.231-6.891-.567.101-.543.193 2.341 6.597Zm28-5v-7h-.62l-.611.109 1.231 6.891ZM235 431.5l-6.667-2.133-.054.169-.046.173L235 431.5Zm8-25-6.653-2.177-.007.022-.007.022L243 406.5Zm18-55-5.409-4.444-.835 1.017-.409 1.25L261 351.5Zm39.023-47.5-3.996-5.747-.797.554-.616.749 5.409 4.444Zm-49.794 197.5-1.452 6.848 1.452-6.848Zm344.248-64-6.829 1.538.014.059.014.059 6.801-1.656ZM545 407l-6.967-.679-.033.339v.34h7Zm0 181.5h-7v.163l.008.163L545 588.5Zm7.5 173.5 5.469 4.369.271-.339.227-.371L552.5 762Zm-12.664 14.5 2.481 6.546 1.444-.548 1.08-1.104-5.005-4.894Zm-47.739-23.33-6.799 1.665.337 1.374.843 1.136 5.619-4.175Zm-12.079-49.312 6.799-1.665-.001-.007-.002-.007-6.796 1.679ZM463 635l-6.811 1.615.007.032.008.033L463 635Zm-16-67.5h-7v.818l.189.797L447 567.5Zm70.404 209-3.434 6.1.82.461.911.229 1.703-6.79ZM565 285l2.164-6.657L565 285Zm-30-10 2.341-6.597-.543-.193-.567-.101L535 275Zm-28-5 1.231-6.891-.611-.109H507v7Zm152.5 162 6.767-1.791-.046-.173-.054-.169L659.5 432Zm-8-25 6.667-2.133-.007-.022-.007-.022L651.5 407Zm-18-55 6.653-2.177-.409-1.25-.835-1.017L633.5 352Zm-39.023-47.5 5.409-4.444-.616-.749-.797-.554-3.996 5.747ZM644.271 502l1.452 6.848-1.452-6.848ZM880 447c0 239.139-193.861 433-433 433v14c246.871 0 447-200.129 447-447h-14ZM447 880C207.861 880 14 686.139 14 447H0c0 246.871 200.129 447 447 447v-14ZM14 447C14 207.861 207.861 14 447 14V0C200.129 0 0 200.129 0 447h14ZM447 14c239.139 0 433 193.861 433 433h14C894 200.129 693.871 0 447 0v14Zm60 169c0 33.137-26.863 60-60 60v14c40.869 0 74-33.131 74-74h-14Zm-60 60c-33.137 0-60-26.863-60-60h-14c0 40.869 33.131 74 74 74v-14Zm-60-60c0-33.137 26.863-60 60-60v-14c-40.869 0-74 33.131-74 74h14Zm60-60c33.137 0 60 26.863 60 60h14c0-40.869-33.131-74-74-74v14ZM286.5 481c6.388 2.863 6.388 2.862 6.389 2.861l.001-.003a.049.049 0 0 0 .003-.007l.008-.017.021-.049.07-.158c.057-.133.138-.321.24-.563.203-.484.493-1.189.858-2.118.731-1.86 1.767-4.621 3.031-8.329 2.527-7.416 5.966-18.617 9.703-33.961l-13.602-3.312c-3.641 14.946-6.963 25.745-9.353 32.756a179.59 179.59 0 0 1-2.808 7.723 79.688 79.688 0 0 1-.911 2.228l-.037.083-.005.012.001-.002.001-.003.001-.002c.001-.001.001-.002 6.389 2.861Zm20.352-42.462c4.246-18.857 8.899-29.796 12.243-39.191l-13.19-4.694c-3.165 8.892-8.228 20.899-12.711 40.809l13.658 3.076Zm12.243-39.191c.78-2.191 1.135-2.856 1.316-3.143.179-.285.292-.409 1.492-1.696 2.363-2.534 6.047-6.713 13.476-18.209l-11.758-7.598c-7.068 10.936-10.256 14.435-11.956 16.258-.831.891-2.047 2.114-3.095 3.775-1.046 1.658-1.817 3.538-2.665 5.919l13.19 4.694Zm16.284-23.048c1.556-2.407 2.227-2.469 1.701-2.263-1.308.514-2.557-.09-2.829-.317-.004-.004.183.159.511.645.318.471.689 1.126 1.092 1.992.813 1.746 1.605 4.006 2.345 6.632 1.478 5.241 2.568 11.265 3.292 16.085a195.488 195.488 0 0 1 .984 7.547l.045.431.011.104.002.022v.004c0-.001 0-.002 6.967-.681s6.967-.681 6.967-.682l-.001-.004-.001-.012-.004-.038-.014-.138-.052-.502a211.074 211.074 0 0 0-1.059-8.131c-.76-5.06-1.953-11.743-3.662-17.805-.854-3.027-1.883-6.068-3.13-8.745-1.183-2.539-2.861-5.414-5.313-7.464-2.826-2.364-6.884-3.696-11.268-1.974-3.601 1.414-6.274 4.495-8.342 7.696l11.758 7.598Zm7.129 211.375c-1.822 39.061-4.767 80.525-6.732 113.356-.979 16.36-1.718 30.615-1.937 41.249-.109 5.303-.092 9.841.105 13.348.099 1.745.249 3.375.485 4.782.194 1.154.577 3.075 1.604 4.75l11.934-7.318c.488.795.429 1.203.269.252-.116-.696-.23-1.76-.314-3.254-.167-2.971-.192-7.091-.086-12.272.213-10.333.936-24.344 1.915-40.7 1.952-32.601 4.915-74.367 6.741-113.541l-13.984-.652Zm-5.977 178.195c5.214 6.527 8.155 9.94 13.128 15.025l10.01-9.788c-4.558-4.661-7.187-7.7-12.2-13.975l-10.938 8.738Zm72.671-11.534 12.079-49.311-13.598-3.331-12.079 49.311 13.598 3.331Zm12.075-49.297 17.019-68.858-13.592-3.36-17.018 68.859 13.591 3.359Zm17.034-68.923 16-67.5-13.622-3.23-16 67.5 13.622 3.23Zm-86.128 146.431c4.053 1.536 7.86 2.434 12.32 2.439 4.285.004 8.822-.822 14.296-2.195l-3.406-13.58c-5.128 1.286-8.334 1.777-10.877 1.775-2.369-.003-4.477-.434-7.371-1.531l-4.962 13.092Zm28.347-.446c12.052-6.785 18.232-12.794 27.492-25.255l-11.238-8.35c-8.403 11.309-13.187 15.812-23.122 21.405l6.868 12.2Zm-48.866-490.943c19.905-6.469 14.56-4.518 30.177-10.06l-4.682-13.194c-15.383 5.458-9.728 3.409-29.823 9.94l4.328 13.314Zm29.067-9.766 28-5-2.462-13.782-28 5 2.462 13.782ZM387.5 276.5h60v-14h-60v14ZM232.767 467.291l9-34-13.534-3.582-9 34 13.534 3.582Zm8.9-33.658 8-25-13.334-4.266-8 25 13.334 4.266Zm7.986-24.956 18-55-13.306-4.354-18 55 13.306 4.354Zm16.756-52.733 39.023-47.5-10.818-8.888-39.023 47.5 10.818 8.888Zm37.61-46.197c9.051-6.293 14.617-10.729 18.374-13.483 3.736-2.738 5.928-4.021 9.271-5.107l-4.328-13.314c-5.318 1.728-8.875 3.946-13.219 7.129-4.322 3.168-9.164 7.074-18.09 13.281l7.992 11.494ZM440.5 565v2h14v-2h-14ZM219.858 459.662c-4.465 22.92 9.159 44.498 28.919 48.686l2.903-13.696c-11.32-2.399-21.28-15.888-18.081-32.314l-13.741-2.676Zm28.919 48.686c9.46 2.005 19.606-.305 27.876-5.37 8.318-5.094 15.288-13.313 17.873-23.803l-13.594-3.35c-1.572 6.381-5.916 11.738-11.591 15.214-5.724 3.506-12.249 4.76-17.661 3.613l-2.903 13.696ZM608 481.5c6.388-2.863 6.388-2.862 6.389-2.861l.001.002.001.003.001.002-.005-.012-.037-.083a79.688 79.688 0 0 1-.911-2.228 179.59 179.59 0 0 1-2.808-7.723c-2.39-7.011-5.712-17.81-9.353-32.756l-13.602 3.312c3.737 15.344 7.176 26.545 9.703 33.961 1.264 3.708 2.3 6.469 3.031 8.329.365.929.655 1.634.858 2.118a67.075 67.075 0 0 0 .31.721l.021.049.008.017.003.007.001.003c.001.001.001.002 6.389-2.861Zm-6.694-45.538c-4.483-19.91-9.546-31.917-12.711-40.809l-13.19 4.694c3.344 9.395 7.997 20.334 12.243 39.191l13.658-3.076Zm-12.711-40.809c-.848-2.381-1.619-4.261-2.665-5.919-1.048-1.661-2.264-2.884-3.095-3.775-1.7-1.823-4.888-5.322-11.956-16.258l-11.758 7.598c7.429 11.496 11.113 15.675 13.476 18.209 1.2 1.287 1.313 1.411 1.492 1.696.181.287.536.952 1.316 3.143l13.19-4.694Zm-17.716-25.952c-2.068-3.201-4.741-6.282-8.342-7.696-4.384-1.722-8.442-.39-11.268 1.974-2.452 2.05-4.13 4.925-5.313 7.464-1.247 2.677-2.276 5.718-3.13 8.745-1.709 6.062-2.902 12.745-3.662 17.805a211.074 211.074 0 0 0-1.059 8.131l-.052.502-.014.138-.004.038-.001.012-.001.004c0 .001 0 .003 6.967.682s6.967.68 6.967.681v-.004l.002-.022.011-.104.045-.431a195.488 195.488 0 0 1 .984-7.547c.724-4.82 1.814-10.844 3.292-16.085.74-2.626 1.532-4.886 2.345-6.632.403-.866.774-1.521 1.092-1.992.328-.486.515-.649.511-.645-.272.227-1.521.831-2.829.317-.526-.206.145-.144 1.701 2.263l11.758-7.598Zm-32.871 219.625c1.826 39.174 4.789 80.94 6.741 113.541.979 16.356 1.702 30.367 1.915 40.7.106 5.181.081 9.301-.086 12.272-.084 1.494-.198 2.558-.314 3.254-.16.951-.219.543.269-.252l11.934 7.318c1.027-1.675 1.41-3.596 1.604-4.75.236-1.407.386-3.037.485-4.782.197-3.507.214-8.045.105-13.348-.219-10.634-.958-24.889-1.937-41.249-1.965-32.831-4.91-74.295-6.732-113.356l-13.984.652Zm9.023 168.805c-5.013 6.275-7.642 9.314-12.2 13.975l10.01 9.788c4.973-5.085 7.914-8.498 13.128-15.025l-10.938-8.738Zm-48.135-6.127-12.079-49.311-13.598 3.331 12.079 49.311 13.598-3.331Zm-12.082-49.325-17.018-68.859-13.592 3.36 17.019 68.858 13.591-3.359Zm-17.003-68.794-16-67.5-13.622 3.23 16 67.5 13.622-3.23Zm67.544 136.569c-2.894 1.097-5.002 1.528-7.371 1.531-2.543.002-5.749-.489-10.877-1.775l-3.406 13.58c5.474 1.373 10.011 2.199 14.296 2.195 4.46-.005 8.267-.903 12.32-2.439l-4.962-13.092Zm-16.517.446c-9.935-5.593-14.719-10.096-23.122-21.405l-11.238 8.35c9.26 12.461 15.44 18.47 27.492 25.255l6.868-12.2Zm46.326-492.057c-20.095-6.531-14.44-4.482-29.823-9.94l-4.682 13.194c15.617 5.542 10.272 3.591 30.177 10.06l4.328-13.314Zm-30.933-10.234-28-5-2.462 13.782 28 5 2.462-13.782ZM507 263h-60v14h60v-14Zm168.267 201.209-9-34-13.534 3.582 9 34 13.534-3.582Zm-9.1-34.342-8-25-13.334 4.266 8 25 13.334-4.266Zm-8.014-25.044-18-55-13.306 4.354 18 55 13.306-4.354Zm-19.244-57.267-39.023-47.5-10.818 8.888 39.023 47.5 10.818-8.888Zm-40.436-48.803c-8.926-6.207-13.768-10.113-18.09-13.281-4.344-3.184-7.901-5.401-13.219-7.129l-4.328 13.314c3.343 1.086 5.535 2.369 9.271 5.107 3.757 2.754 9.323 7.19 18.374 13.483l7.992-11.494ZM440 565.5v2h14v-2h-14Zm220.901-102.662c3.199 16.426-6.761 29.915-18.081 32.314l2.903 13.696c19.76-4.188 33.384-25.766 28.919-48.686l-13.741 2.676Zm-18.081 32.314c-5.412 1.147-11.937-.107-17.661-3.613-5.675-3.476-10.019-8.833-11.591-15.214l-13.594 3.35c2.585 10.49 9.556 18.709 17.873 23.803 8.27 5.065 18.416 7.375 27.876 5.37l-2.903-13.696ZM440.5 385.826c0 14.398-10.39 24.827-21.75 24.827v14c20.397 0 35.75-18.07 35.75-38.827h-14Zm-21.75 24.827c-11.36 0-21.75-10.429-21.75-24.827h-14c0 20.757 15.353 38.827 35.75 38.827v-14ZM397 385.826C397 371.429 407.39 361 418.75 361v-14c-20.397 0-35.75 18.07-35.75 38.826h14ZM418.75 361c11.36 0 21.75 10.429 21.75 24.826h14c0-20.756-15.353-38.826-35.75-38.826v14ZM498 471.174C498 485.571 487.61 496 476.25 496v14c20.397 0 35.75-18.07 35.75-38.826h-14ZM476.25 496c-11.36 0-21.75-10.429-21.75-24.826h-14c0 20.756 15.353 38.826 35.75 38.826v-14Zm-21.75-24.826c0-14.398 10.39-24.827 21.75-24.827v-14c-20.397 0-35.75 18.07-35.75 38.827h14Zm21.75-24.827c11.36 0 21.75 10.429 21.75 24.827h14c0-20.757-15.353-38.827-35.75-38.827v14Zm-63.829 46.924 84.573-125.16-11.6-7.838-84.573 125.16 11.6 7.838ZM342.5 406.5V588h14V406.5h-14Zm195.5.5v181.5h14V407h-14Z" fill="#000"/></svg>
    ''';


  double _calculateImc(double weight, double height) {
    final double imc;
    imc = weight / (height * height);
    return double.parse((imc).toStringAsFixed(2));
  }

  void _getCategoryByImc(double imc) {
    const List<String> category = [
      "Muito abaixo do peso",
      "Abaixo do peso",
      "Peso normal",
      "Acima do peso",
      "Obesidade I",
      "Obesidade II (severa)",
      "Obesidade III (mórbida)",
    ];
    const List<double> limitNumbers = [17, 18.49, 24.99, 29.99, 34.99, 39.99];
    double smallerLimitNumber = 0;

    for (var i = 0; i < category.length; i++) {
      if (imc >= smallerLimitNumber) {
        } if (smallerLimitNumber == 39.99 || imc < limitNumbers[i]) {
          _infoTextImc = category[i];
          break;
        }
        else {
        smallerLimitNumber = limitNumbers[i];
      }
    }
  }

  void _cleanFields() {
    _weightController.text = "";
    _heightController.text = "";
    setState(() {
      _imc = null;
      _infoTextImc = null;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Padding(
        //Adiciona um Widget com o padding especificado e insere o Column como filho
        padding: const EdgeInsets.fromLTRB(32, 0, 32, 0),
        child: SizedBox(
          height: (MediaQuery.of(context).size.height) / 1.5,
          child: Column(
            //Essa configuração abaixo faz com que todos os filhos sejam
            //esticados até os limites do pai no eixo cruzado:
            crossAxisAlignment: CrossAxisAlignment.stretch,
            mainAxisAlignment: MainAxisAlignment.start,
            children: <Widget>[
              Padding(
                padding: EdgeInsets.only(
                  top: 60,
                  bottom: MediaQuery.of(context).size.height / 12,
                ),

                child:  SvgPicture.string(
                  svg,
                  height: 80,
                  width: 80,
                  color: Theme.of(context).colorScheme.secondary,
                  semanticsLabel: "icone de um homem com um simbolo de porcento no seu corpo",
                ),
              ),
              CustomTextField(
                controller: _weightController,
                label: "Peso (Kg)",
              ),
              CustomTextField(
                controller: _heightController,
                label: "Altura (m)",
              ),
              CustomElevatedButtom(
                title: "Calcular",
                onPressed: () {
                  if (_weightController.text.isNotEmpty &&
                      _heightController.text.isNotEmpty) {
                    setState(() {
                      _imc = _calculateImc(
                          double.parse(
                              _weightController.text.replaceAll(',', '.')),
                          double.parse(
                              _heightController.text.replaceAll(',', '.')));
                      _getCategoryByImc(_imc!);
                    });
                    showDialog(
                      context: context,
                      barrierDismissible: false,
                      builder: (BuildContext context) {
                        return CustomAlertDialog(
                          title: "Seu Índice de Massa Corporal (IMC)",
                          imcResult: _imc!,
                          infoTextImc: _infoTextImc!,
                        );
                      },
                    );
                  }
                },
              )
            ],
          ),
        ),
      ),
      floatingActionButton: FloatingActionButton(
        child: const Icon(Icons.refresh),
        tooltip: "Limpar campos",
        onPressed: () {
          _cleanFields();
        },
        backgroundColor: Theme.of(context).colorScheme.primary,
      ),
    );
  }
}
